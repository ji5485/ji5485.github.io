{"version":3,"file":"component---src-pages-about-tsx-2d78f80dfcb0cfe99226.js","mappings":"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","sources":["webpack://@ji5485/ji5485.github.io/./src/components/molecules/Title.tsx","webpack://@ji5485/ji5485.github.io/./src/components/molecules/Question.tsx","webpack://@ji5485/ji5485.github.io/./src/components/organisms/QuestionList.tsx","webpack://@ji5485/ji5485.github.io/./src/components/organisms/Profile.tsx","webpack://@ji5485/ji5485.github.io/./src/components/molecules/Career.tsx","webpack://@ji5485/ji5485.github.io/./src/components/organisms/CareerList.tsx","webpack://@ji5485/ji5485.github.io/./src/components/templates/About.tsx","webpack://@ji5485/ji5485.github.io/./src/pages/about.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport Text from 'components/atoms/Text'\nimport styled from '@emotion/styled'\n\ntype TitleStyleProps = {\n  align?: 'right' | 'left'\n}\n\ntype TitleProps = {\n  title: string\n  subTitle: string\n} & TitleStyleProps\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: var(--color);\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst SubTitle = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Title: FunctionComponent<TitleProps> = function ({\n  title,\n  subTitle,\n  align,\n}) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  )\n}\n\nTitle.defaultProps = {\n  align: 'left',\n}\n\nexport default Title\n","import React, { FunctionComponent } from 'react'\nimport Icon, { IconComponent } from 'components/atoms/Icon'\nimport Text, { TextComponent } from 'components/atoms/Text'\nimport styled from '@emotion/styled'\nimport { shortId } from 'utilities/utils'\n\nexport type QuestionProps = {\n  icon: 'smileWink' | 'running' | 'layerGroup' | 'userTie'\n  title: string[]\n  content: string[]\n}\n\nexport const QuestionComponent = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\n  padding: 25px;\n\n  body.dark & {\n    background: rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst TitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n\n  ${IconComponent} {\n    color: #5c7cfa;\n    margin-bottom: 20px;\n  }\n\n  ${TextComponent} {\n    font-size: 18px;\n    font-weight: 700;\n  }\n\n  body.dark & {\n    ${IconComponent} {\n      color: #748ffc;\n    }\n  }\n\n  @media (max-width: 768px) {\n    ${TextComponent} {\n      font-size: 15px;\n    }\n  }\n`\n\nconst Content = styled.div`\n  ${TextComponent} {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.6;\n  }\n\n  @media (max-width: 768px) {\n    ${TextComponent} {\n      font-size: 12px;\n    }\n  }\n`\n\nconst Question: FunctionComponent<QuestionProps> = function ({\n  icon,\n  title,\n  content,\n}) {\n  return (\n    <QuestionComponent>\n      <TitleBox>\n        <Icon size={50} type={icon} />\n        <div>\n          {title.map((text: string) => (\n            <Text key={shortId()}>{text}</Text>\n          ))}\n        </div>\n      </TitleBox>\n\n      <Content>\n        {content.map((text: string) => (\n          <Text key={shortId()}>{text}</Text>\n        ))}\n      </Content>\n    </QuestionComponent>\n  )\n}\n\nexport default Question\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Question, {\n  QuestionComponent,\n  QuestionProps,\n} from 'components/molecules/Question'\nimport QUESTION_LIST from 'static/QuestionList.json'\nimport { shortId } from 'utilities/utils'\n\ntype QuestionType = {\n  icon: QuestionProps['icon']\n  title: string[]\n  content: string[]\n}\n\nexport const QuestionListComponent = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 30px;\n\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n\n    ${QuestionComponent} + ${QuestionComponent} {\n      margin-top: 20px;\n    }\n  }\n`\n\nconst QuestionList: FunctionComponent = function () {\n  return (\n    <QuestionListComponent>\n      {QUESTION_LIST.map((props: QuestionType) => {\n        return <Question {...props} key={shortId()} />\n      })}\n    </QuestionListComponent>\n  )\n}\n\nexport default QuestionList\n","import React, { FunctionComponent } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Text, { TextComponent } from 'components/atoms/Text'\nimport { shortId } from 'utilities/utils'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype GatsbyImageNodeType = {\n  node: {\n    gatsbyImageData: IGatsbyImageData\n  }\n}\n\ntype ProfileImageQueryType = {\n  allImageSharp: {\n    edges: GatsbyImageNodeType[]\n  }\n}\n\nconst getImageQuery = graphql`\n  {\n    allImageSharp(filter: { original: { src: { regex: \"/about/\" } } }) {\n      edges {\n        node {\n          gatsbyImageData(aspectRatio: 1)\n        }\n      }\n    }\n  }\n`\n\nconst ProfileComponent = styled.div`\n  width: 100%;\n`\n\nconst ProfileImageList = styled.div`\n  width: 100%;\n  max-height: 250px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  .gatsby-image-wrapper {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n`\n\nconst ProfileContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n\n  ${TextComponent} {\n    font-size: 20px;\n    font-weight: 300;\n  }\n\n  ${TextComponent}:last-of-type {\n    font-weight: 700;\n  }\n\n  @media (max-width: 768px) {\n    ${TextComponent} {\n      font-size: 15px;\n    }\n  }\n`\n\nconst Profile: FunctionComponent = function () {\n  const {\n    allImageSharp: { edges },\n  } = useStaticQuery<ProfileImageQueryType>(getImageQuery)\n\n  return (\n    <ProfileComponent>\n      <ProfileImageList>\n        {edges.map(({ node: { gatsbyImageData } }: GatsbyImageNodeType) => (\n          <GatsbyImage\n            image={gatsbyImageData}\n            key={shortId()}\n            alt=\"Profile Image\"\n          />\n        ))}\n      </ProfileImageList>\n\n      <ProfileContent>\n        <Text>Junior Web Frontend Developer</Text>\n        <Text>Ju Hyeon Do</Text>\n      </ProfileContent>\n    </ProfileComponent>\n  )\n}\n\nexport default Profile\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Text, { TextComponent } from 'components/atoms/Text'\nimport { shortId } from 'utilities/utils'\n\nexport type CareerProps = {\n  title: string\n  contents: string[]\n}\n\nexport const CareerComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst Title = styled(Text)`\n  font-size: 20px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    margin-bottom: 40px;\n  }\n`\n\nconst Content = styled.div`\n  width: 70%;\n\n  ${TextComponent} {\n    font-size: 15px;\n    font-weight: 300;\n    padding: 12px;\n    border-top: 1px solid rgba(0, 0, 0, 0.3);\n  }\n\n  ${TextComponent}:last-child {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  }\n\n  body.dark & {\n    ${TextComponent} {\n      border-color: rgba(255, 255, 255, 0.3);\n    }\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n\n    ${TextComponent} {\n      font-size: 12px;\n    }\n  }\n`\n\nconst Career: FunctionComponent<CareerProps> = function ({ title, contents }) {\n  return (\n    <CareerComponent>\n      <Title>{title}</Title>\n\n      <Content>\n        {contents.map((content: string) => {\n          return <Text key={shortId()}>{content}</Text>\n        })}\n      </Content>\n    </CareerComponent>\n  )\n}\n\nexport default Career\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Career, { CareerComponent } from 'components/molecules/Career'\nimport { shortId } from 'utilities/utils'\n\ntype CareerType = {\n  title: string\n  contents: string[]\n}\n\nconst CAREER_LIST: CareerType[] = [\n  {\n    title: 'Prize',\n    contents: [\n      'Smarteen App+ Challenge 본선 진출 / 가작 입상',\n      'Rehoboth Launch Cup 본선 진출 / 장려상 수상',\n      '건국대학교 Medical Hackathon / 대상 수상',\n    ],\n  },\n  {\n    title: 'Experience',\n    contents: [\n      '프리랜서 개발자 (2019.01 ~ 2019.06)',\n      '스타트업 Knar 웹 개발자 (2019.06 ~ 2020.02)',\n      '서울시립대학교 멋쟁이사자처럼 강의자 (2019.08 ~ 2019.11)',\n      '스타트업 하이 프로토콜 웹 개발자 (2021.12 ~ )',\n    ],\n  },\n  {\n    title: 'Education',\n    contents: [\n      '한국디지털미디어고등학교 졸업 (2016.03 ~ 2019.02)',\n      '서울시립대학교 수학과 재학 (2019.03 ~ )',\n    ],\n  },\n]\n\nconst CareerListComponent = styled.div`\n  margin-top: 120px;\n\n  ${CareerComponent} + ${CareerComponent} {\n    margin-top: 100px;\n  }\n`\n\nconst CareerList: FunctionComponent = function () {\n  return (\n    <CareerListComponent>\n      {CAREER_LIST.map(({ title, contents }: CareerType) => {\n        return <Career title={title} contents={contents} key={shortId()} />\n      })}\n    </CareerListComponent>\n  )\n}\n\nexport default CareerList\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Title from 'components/molecules/Title'\nimport QuestionList from 'components/organisms/QuestionList'\nimport Profile from 'components/organisms/Profile'\nimport CareerList from 'components/organisms/CareerList'\nimport PageTemplate from 'components/templates/PageTemplate'\n\nconst StyleLine = styled.div`\n  width: 1px;\n  height: 100px;\n  background: #000000;\n  margin: 100px auto;\n\n  body.dark & {\n    background: #ffffff;\n  }\n`\n\nconst About: FunctionComponent = function () {\n  return (\n    <PageTemplate>\n      <Title title=\"About.\" subTitle=\"Introduce Myself\" align=\"left\" />\n      <QuestionList />\n      <StyleLine />\n      <Title title=\"Profile.\" subTitle=\"Information About Me\" align=\"right\" />\n      <Profile />\n      <CareerList />\n    </PageTemplate>\n  )\n}\n\nexport default About\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from 'components/templates/Layout'\nimport About from 'components/templates/About'\n\nconst ABOUT_PAGE_METADATA = {\n  title: 'About Junior Developer Hyun',\n  description:\n    '저는 항상 다양한 경험을 중요시 생각하고, 언제나 Too Early To Stop이라는 제 슬로건에 맞게 행동하기 위해 노력하는 주니어 개발자 Hyun입니다.',\n  url: 'https://ji5485.github.io/about/',\n}\n\ntype AboutPageProps = {\n  data: {\n    file: {\n      publicURL: string\n    }\n  }\n}\n\nconst AboutPage: FunctionComponent<AboutPageProps> = function ({\n  data: {\n    file: { publicURL },\n  },\n}) {\n  return (\n    <Layout {...ABOUT_PAGE_METADATA} image={publicURL}>\n      <About />\n    </Layout>\n  )\n}\n\nexport default AboutPage\n\nexport const imageMetadataQuery = graphql`\n  {\n    file(name: { eq: \"main_image\" }) {\n      publicURL\n    }\n  }\n`\n"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","SubTitle","Title","title","subTitle","defaultProps","QuestionComponent","TitleBox","IconComponent","TextComponent","Content","icon","content","Icon","size","type","map","text","key","shortId","QuestionListComponent","QUESTION_LIST","props","ProfileComponent","ProfileImageList","ProfileContent","allImageSharp","edges","useStaticQuery","node","gatsbyImageData","G","image","alt","CareerComponent","contents","CAREER_LIST","CareerListComponent","StyleLine","PageTemplate","ABOUT_PAGE_METADATA","description","url","data","file","publicURL","Layout"],"sourceRoot":""}