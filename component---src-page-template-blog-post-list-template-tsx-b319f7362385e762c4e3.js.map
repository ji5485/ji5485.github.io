{"version":3,"file":"component---src-page-template-blog-post-list-template-tsx-b319f7362385e762c4e3.js","mappings":"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","sources":["webpack://@ji5485/ji5485.github.io/./src/components/molecules/Title.tsx","webpack://@ji5485/ji5485.github.io/./src/components/molecules/CategoryList.tsx","webpack://@ji5485/ji5485.github.io/./src/components/molecules/PostItem.tsx","webpack://@ji5485/ji5485.github.io/./src/components/organisms/PostList.tsx","webpack://@ji5485/ji5485.github.io/./src/components/molecules/PaginationButton.tsx","webpack://@ji5485/ji5485.github.io/./src/components/organisms/Pagination.tsx","webpack://@ji5485/ji5485.github.io/./src/components/templates/BlogPostList.tsx","webpack://@ji5485/ji5485.github.io/./src/page_template/BlogPostListTemplate.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport Text from 'components/atoms/Text'\nimport styled from '@emotion/styled'\n\ntype TitleStyleProps = {\n  align?: 'right' | 'left'\n}\n\ntype TitleProps = {\n  title: string\n  subTitle: string\n} & TitleStyleProps\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: var(--color);\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst SubTitle = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Title: FunctionComponent<TitleProps> = function ({\n  title,\n  subTitle,\n  align,\n}) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  )\n}\n\nTitle.defaultProps = {\n  align: 'left',\n}\n\nexport default Title\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Link, { LinkComponent } from 'components/atoms/Link'\nimport { shortId, splitOnUpper } from 'utilities/utils'\n\nexport type CategoryListProps = {\n  categories: {\n    [key: string]: number\n  }\n}\n\nconst CategoryListComponent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -5px -10px;\n  margin-bottom: 60px;\n\n  ${LinkComponent} {\n    font-size: 13px;\n    font-weight: 700;\n    margin: 5px 10px;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  @media (max-width: 768px) {\n    margin-bottom: 40px;\n  }\n`\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  categories,\n}) {\n  return (\n    <CategoryListComponent>\n      {Object.keys(categories).map((category: string) => {\n        const url = `/blog/${splitOnUpper(category)}/1`\n        const count: number = categories[category]\n\n        return (\n          <Link to={url} key={shortId()}>\n            #{category}({count})\n          </Link>\n        )\n      })}\n    </CategoryListComponent>\n  )\n}\n\nexport default CategoryList\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Link, { LinkComponent } from 'components/atoms/Link'\nimport Text from 'components/atoms/Text'\nimport { dateFormat, shortId, splitOnUpper } from 'utilities/utils'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\nexport type PostItemProps = {\n  title: string\n  summary: string[]\n  date: string\n  thumbnail: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n  categories: string[]\n  slug: string\n}\n\nconst PostItemComponent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  padding: 20px 0;\n  border-top: 1px solid #1e1f21;\n  border-bottom: 1px solid #1e1f21;\n\n  & + & {\n    border-top: none;\n  }\n\n  body.dark & {\n    border-color: #ffffff;\n  }\n`\n\nconst Content = styled.div`\n  width: calc(100% - 200px);\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nconst Title = styled(LinkComponent)`\n  font-size: 23px;\n  font-weight: 400;\n  margin-bottom: 5px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (min-width: 769px) {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 3px;\n\n  ${LinkComponent} {\n    font-size: 14px;\n    font-weight: 400;\n    opacity: 0.75;\n    margin-right: 10px;\n\n    @media (max-width: 768px) {\n      font-size: 12px;\n    }\n  }\n\n  ${LinkComponent}:hover {\n    text-decoration: underline;\n  }\n`\n\nconst Date = styled(Text)`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n  margin-bottom: 10px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`\n\nconst Summary = styled(Text)`\n  font-size: 15px;\n  font-weight: 300;\n  opacity: 0.9;\n  margin-top: auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-wrap: break-word;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 180px;\n\n  @media (max-width: 768px) {\n    display: none !important;\n  }\n`\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  summary,\n  date,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  categories,\n  slug,\n}) {\n  return (\n    <PostItemComponent>\n      <Content>\n        <Title to={slug}>{title}</Title>\n        <Category>\n          {categories.map((category: string) => (\n            <Link to={`/blog/${splitOnUpper(category)}/1`} key={shortId()}>\n              #{category}\n            </Link>\n          ))}\n        </Category>\n        <Date>{dateFormat(date)}</Date>\n        <Summary>{summary}</Summary>\n      </Content>\n\n      <ThumbnailImage image={gatsbyImageData} alt=\"Thumbnail Image\" />\n    </PostItemComponent>\n  )\n}\n\nexport default PostItem\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport PostItem from 'components/molecules/PostItem'\nimport { shortId } from 'utilities/utils'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype PostItemType = {\n  node: {\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      title: string\n      summary: string[]\n      date: string\n      categories: string[]\n      thumbnail: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n    }\n  }\n}\n\nexport type PostListProps = {\n  list: PostItemType[]\n}\n\nconst PostListComponent = styled.div``\n\nconst PostList: FunctionComponent<PostListProps> = function ({ list }) {\n  return (\n    <PostListComponent>\n      {list.map(\n        ({\n          node: {\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostItemType) => (\n          <PostItem slug={slug} {...frontmatter} key={shortId()} />\n        ),\n      )}\n    </PostListComponent>\n  )\n}\n\nexport default PostList\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { LinkComponent } from 'components/atoms/Link'\n\ntype PaginationButtonProps = {\n  to: string\n  page: number\n}\n\nconst PaginationButtonComponent = styled(LinkComponent)`\n  width: 25px;\n  height: 25px;\n  border: 1px solid var(--color);\n  font-size: 17px;\n  font-weight: 700;\n  display: grid;\n  place-items: center;\n  color: var(--color);\n  background: var(--background);\n\n  & + & {\n    margin-left: 10px;\n  }\n\n  &.active {\n    color: var(--background);\n    background: var(--color);\n  }\n`\n\nconst PaginationButton: FunctionComponent<PaginationButtonProps> = function ({\n  to,\n  page,\n}) {\n  return (\n    <PaginationButtonComponent to={to} activeClassName=\"active\">\n      {page}\n    </PaginationButtonComponent>\n  )\n}\n\nexport default PaginationButton\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Icon, { IconComponent } from 'components/atoms/Icon'\nimport { LinkComponent } from 'components/atoms/Link'\nimport PaginationButton from 'components/molecules/PaginationButton'\nimport { shortId } from 'utilities/utils'\n\nexport type PaginationProps = {\n  totalPage: number\n  currentPage: number\n  category: string | null\n}\n\nconst PaginationComponent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 80px;\n`\n\nconst PageMoveIcon = styled(LinkComponent)<{ active: number }>`\n  cursor: pointer;\n  pointer-events: ${({ active }) => (active ? 'initial' : 'none')};\n  padding: 0 10px;\n\n  ${IconComponent} {\n    color: ${({ active }) => (active ? 'initial' : 'var(--color)')};\n    opacity: 0.3;\n  }\n`\n\nconst Pagination: FunctionComponent<PaginationProps> = function ({\n  totalPage,\n  currentPage,\n  category,\n}) {\n  const currentPosition = Math.floor((currentPage - 1) / 5) + 1\n  const prev = currentPosition === 1 ? null : (currentPosition - 1) * 5\n  const next =\n    currentPosition === Math.floor((totalPage - 1) / 5) + 1\n      ? null\n      : currentPosition * 5 + 1\n\n  const returnPageLink = (page: number | null): string =>\n    page !== null ? `/blog${category ? `/${category}` : ''}/${page}/` : '/'\n\n  return (\n    <PaginationComponent>\n      <PageMoveIcon to={returnPageLink(prev)} active={prev ? 1 : 0}>\n        <Icon type=\"caretLeft\" size={17} />\n      </PageMoveIcon>\n\n      {[1, 2, 3, 4, 5].map((index: number) => {\n        const page = (currentPosition - 1) * 5 + index\n        return (\n          page <= totalPage && (\n            <PaginationButton\n              to={returnPageLink(page)}\n              page={page}\n              key={shortId()}\n            />\n          )\n        )\n      })}\n\n      <PageMoveIcon to={returnPageLink(next)} active={next ? 1 : 0}>\n        <Icon type=\"caretRight\" size={17} />\n      </PageMoveIcon>\n    </PaginationComponent>\n  )\n}\n\nexport default Pagination\n","import React, { FunctionComponent } from 'react'\nimport Title from 'components/molecules/Title'\nimport CategoryList, {\n  CategoryListProps,\n} from 'components/molecules/CategoryList'\nimport PostList, { PostListProps } from 'components/organisms/PostList'\nimport Pagination, { PaginationProps } from 'components/organisms/Pagination'\nimport PageTemplate from 'components/templates/PageTemplate'\n\nexport type BlogPostListProps = {\n  list: PostListProps['list']\n  context: PaginationProps & CategoryListProps\n}\n\nconst BlogPostList: FunctionComponent<BlogPostListProps> = function ({\n  list,\n  context: { totalPage, currentPage, categories, category },\n}) {\n  const slicedCategory = category\n    ? category.substring(1, category.length - 1)\n    : null\n  const categoryTitle = slicedCategory ? `#${slicedCategory}` : ''\n\n  return (\n    <PageTemplate>\n      <Title title={`Blog${categoryTitle}.`} subTitle=\"Development, Record\" />\n      <CategoryList categories={categories} />\n      <PostList list={list} />\n      {totalPage > 1 && (\n        <Pagination\n          totalPage={totalPage}\n          currentPage={currentPage}\n          category={slicedCategory}\n        />\n      )}\n    </PageTemplate>\n  )\n}\n\nexport default BlogPostList\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from 'components/templates/Layout'\nimport { CategoryListProps } from 'components/molecules/CategoryList'\nimport { PostListProps } from 'components/organisms/PostList'\nimport { PaginationProps } from 'components/organisms/Pagination'\nimport BlogPostList from 'components/templates/BlogPostList'\n\ntype BlogPostListTemplateProps = {\n  data: {\n    filtered?: {\n      edges: PostListProps['list']\n    }\n    unfiltered?: {\n      edges: PostListProps['list']\n    }\n    file: {\n      publicURL: string\n    }\n  }\n  pageContext: CategoryListProps &\n    PaginationProps & {\n      category: string\n      selectedCategory: boolean\n    }\n  location: {\n    href: string\n  }\n}\n\nconst BlogPostListTemplate: FunctionComponent<BlogPostListTemplateProps> =\n  function ({\n    data,\n    pageContext: { selectedCategory, ...restPageContext },\n    location: { href },\n  }) {\n    const list = selectedCategory ? data.filtered : data.unfiltered\n\n    const blogPostListMetaData = {\n      title: 'Dev Log List',\n      description: '지금까지 활동하면서 작성한 Hyun의 Dev Log 목록입니다.',\n      image: data.file.publicURL,\n      url: href,\n    }\n\n    return (\n      <Layout {...blogPostListMetaData}>\n        <BlogPostList list={list!.edges} context={restPageContext} />\n      </Layout>\n    )\n  }\n\nexport default BlogPostListTemplate\n\nexport const blogCategoryQuery = graphql`\n  fragment MarkdownData on MarkdownRemark {\n    frontmatter {\n      title\n      summary\n      date\n      categories\n      thumbnail {\n        childImageSharp {\n          gatsbyImageData(\n            width: 180\n            height: 130\n            transformOptions: { fit: INSIDE }\n          )\n        }\n      }\n    }\n    fields {\n      slug\n    }\n  }\n\n  query blogListQuery(\n    $skip: Int!\n    $selectedCategory: Boolean!\n    $category: String\n  ) {\n    filtered: allMarkdownRemark(\n      filter: { frontmatter: { categories: { regex: $category } } }\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      skip: $skip\n      limit: 10\n    ) @include(if: $selectedCategory) {\n      edges {\n        node {\n          ...MarkdownData\n        }\n      }\n    }\n\n    unfiltered: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      skip: $skip\n      limit: 10\n    ) @skip(if: $selectedCategory) {\n      edges {\n        node {\n          ...MarkdownData\n        }\n      }\n    }\n\n    file(name: { eq: \"main_image\" }) {\n      publicURL\n    }\n  }\n`\n"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","SubTitle","Title","title","subTitle","defaultProps","CategoryListComponent","LinkComponent","categories","Object","keys","map","category","url","splitOnUpper","count","Link","to","key","shortId","PostItemComponent","Content","Category","Date","Summary","ThumbnailImage","GatsbyImage","summary","date","thumbnail","childImageSharp","gatsbyImageData","slug","dateFormat","image","alt","PostListComponent","list","node","fields","frontmatter","PaginationButtonComponent","page","activeClassName","PaginationComponent","PageMoveIcon","active","IconComponent","totalPage","currentPage","currentPosition","Math","floor","prev","next","returnPageLink","Icon","type","size","index","context","slicedCategory","substring","length","categoryTitle","PageTemplate","data","pageContext","selectedCategory","restPageContext","location","href","filtered","unfiltered","blogPostListMetaData","description","file","publicURL","Layout","edges"],"sourceRoot":""}